<!DOCTYPE html>
<html>
<head>
<title>Map My Bike Commute</title>
<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />

<link rel="stylesheet" href="http://code.jquery.com/mobile/1.0a3/jquery.mobile-1.0a3.min.css" />
<script type="text/javascript" src="http://code.jquery.com/jquery-1.5.min.js"></script> 
<script type="text/javascript" src="http://code.jquery.com/mobile/1.0a3/jquery.mobile-1.0a3.min.js"></script> 
<script src="http://maps.google.com/maps/api/js?sensor=true"></script>

<script>

	var directionDisplay;
	var directionsService = new google.maps.DirectionsService();
	var map;
	var markersArray = [];
	var LatLngBndsSWx = <%= sanitize(@LatLngBndsSWx.to_json) %>;
	var LatLngBndsSWy = <%= sanitize(@LatLngBndsSWy.to_json) %>;
	var LatLngBndsNEx = <%= sanitize(@LatLngBndsNEx.to_json) %>;
	var LatLngBndsNEy = <%= sanitize(@LatLngBndsNEy.to_json) %>;
	var Route_YX = <%= sanitize(@Route_YX.to_json) %>;
	var Step_YX = <%= sanitize(@Step_YX.to_json) %>;
	var Route_LatLng;
	var Step_LatLng;

  function initialize() {

	var options = {
	    mapTypeId: google.maps.MapTypeId.TERRAIN
	};


	alert ("1");
	
	map = new google.maps.Map(document.getElementById("map_canvas"),options); 
			
	directionsDisplay = new google.maps.DirectionsRenderer();
	directionsDisplay.setPanel(document.getElementById("directionsPanel"));
	google.maps.event.addListener(directionsDisplay, 'directions_changed', function() {
	getRouteInformation(directionsDisplay.directions);
	});
	
	var LatLngSW = new google.maps.LatLng(LatLngBndsSWy, LatLngBndsSWx);
	var LatLngNE = new google.maps.LatLng(LatLngBndsNEy, LatLngBndsNEx);
	var LatLngBnds = new google.maps.LatLngBounds(LatLngSW,LatLngNE);
	map.fitBounds(LatLngBnds);
	
	alert ("22");
	
	if (Route_YX != null){
	Route_LatLng = new Array;
	
	for (var i=0;i < Route_YX.length; i++){
	Route_LatLng[i] = new google.maps.LatLng(Route_YX[i][0], Route_YX[i][1]);
	}	
	showRoute(Route_LatLng); 
	}  
	
	if (Step_YX != null){
	Step_LatLng = new Array;

	for (var i=0;i < Step_YX.length; i++){
	Step_LatLng[i] = new google.maps.LatLng(Step_YX[i][0], Step_YX[i][1]);
	}	
	showStep(Step_LatLng); 
	}  
	*/
	alert ("33");
  }
    
  function getRouteInformation(result) {
                      
	var route_google = result.routes[0];
	
	//route_mvcArray = route_google.overview_path;
	//showRoute(route_mvcArray); 

	//map.fitBounds(route_google.bounds);      

	var routes_array = new Array();
	
	for(var i=0; i < route_google.overview_path.length; i++) {
	var LatLng = route_google.overview_path[i];
	var lat = String(LatLng.lat());
	var lng = String(LatLng.lng());
	routes_array[i] = lng + " " + lat; 
	}	
		
	var legs_array = new Array();
	for(var i=0; i < route_google.legs.length; i++) {
		
	var leg = route_google.legs[i];
	
	
	
	var steps_array = new Array();
	for (var s=0; s < leg.steps.length;s++){
	var path_array = new Array();
	
	for (var p=0; p < leg.steps[s].path.length;p++){
	var LatLng = leg.steps[s].path[p];
	var lat = String(LatLng.lat());
	var lng = String(LatLng.lng()); 
	path_array[p] = lng + " " + lat;
	}
	path_array.join(",");

	steps_array[s] = leg.steps[s].distance.text + ";" + leg.steps[s].duration.text + ";" + leg.steps[s].end_location + ";" + leg.steps[s].instructions + ";" + leg.steps[s].start_location + ";" + path_array;
	}
	
	legs_array[i] = steps_array.join("::")
	}
	
	document.getElementById("routes_geo").value = routes_array.join(",");
	document.getElementById("legs_geo").value = legs_array.join(":::");
	
	document.getElementById("button_create").click();

  }   
  
  
   function showRoute(path) {
     	 
     	deleteOverlays();
     	
	var polyline = new google.maps.Polyline({
	path: path, 
	map: map, 
	strokeColor:"#FF9900",
	strokeOpacity:0.5,
	strokeWeight:6
	});
	
	markersArray.push(polyline);
	
	var icon_plus = new google.maps.MarkerImage(
	"/images/map_icon_plus6osq.png",
	new google.maps.Size(6, 6),
	new google.maps.Point(0, 0),
	new google.maps.Point(3, 3),
	new google.maps.Size(6, 6)
	);
	
	for(var l=0; l < path.length; l++) {
	var LatLng = path[l];
	var lat = String(LatLng.lat());
	var lng = String(LatLng.lng());  
	var title = "y:" + lat + " x:" + lng;
	addMarker(LatLng,title,icon_plus);
	}

	var icon_begin = new google.maps.MarkerImage(
	"/images/map_icon_begin_small_square.png",
	new google.maps.Size(80, 36),
	new google.maps.Point(0, 0),
	new google.maps.Point(18, 18),
	new google.maps.Size(80, 36)
	);	
	
	addMarker(path[0],"BEGIN",icon_begin);

	var icon_end = new google.maps.MarkerImage(
	"/images/map_icon_end_small_square.png",
	new google.maps.Size(80, 36),
	new google.maps.Point(0, 0),
	new google.maps.Point(18, 18),
	new google.maps.Size(80, 36)
	);

	addMarker(path[path.length - 1],"END",icon_end);

   }
   
      function showStep(path) {
        	         	
   	var polyline = new google.maps.Polyline({
   	path: path, 
   	map: map, 
   	strokeColor:"#2b2020",
   	strokeOpacity:0.65,
   	strokeWeight:16
   	});
   	
   	markersArray.push(polyline); 	
   
   }
  
    function calcRoute() {
   
	/*var start = document.getElementById("route_begin_text").value;
	var end = document.getElementById("route_end_text").value;
	var request = {
	origin:start, 
	destination:end,
	travelMode: google.maps.DirectionsTravelMode.BICYCLING 
	};
	
	directionsService.route(request, function(response, status) {
	if (status == google.maps.DirectionsStatus.OK) {
	directionsDisplay.setDirections(response);
	}
	});*/
	
  }

  function addMarker(position, title, icon) {
    marker = new google.maps.Marker({
      position: position,
      map: map,
      title:title,
      icon:icon
    });
    markersArray.push(marker);
  }
 
 
 function addWayPointAfter(element){
 	
 	var li_wayPoint = document.createElement("li");
 	li_wayPoint.className = "way_point";
 	
 	var div = document.createElement("div");
	div.innerHTML = "Way Point";
  	div.id = "route_title";
 	
 	var input_wayPoint = document.createElement("input");
 	input_wayPoint.id = "route_waypoint_text";
 	
 	li_wayPoint.appendChild(div);
 	li_wayPoint.appendChild(input_wayPoint);
 	
 	element.appendChild(li_wayPoint);
 	
 	var li_tools = document.createElement("li");
 	li_tools.className = "tools";
 	var button_addAbove = document.createElement("button");
  	button_addAbove.id = "buttons_tools";
  	button_addAbove.innerHTML = "ADD WAY POINT ABOVE";
  	 	
  	var button_addBelow = document.createElement("button");
  	button_addBelow.id = "buttons_tools";
 	button_addBelow.innerHTML = "ADD WAY POINT BELOW";
 	
	li_tools.appendChild(button_addAbove);
 	li_tools.appendChild(button_addBelow);
 	 	
  	element.appendChild(li_tools);
 }
 
  function addWayPointBefore(elementId){

 	var ul = document.getElementById("nav"); 
 	var element = document.getElementById(elementId); 
  	
 	var li_wayPoint = document.createElement("li");
 	li_wayPoint.className = "way_point";
 	
 	var div = document.createElement("div");
	div.innerHTML = "Way Point";
  	div.id = "route_title";
 	
 	var input_wayPoint = document.createElement("input");
 	input_wayPoint.id = "route_waypoint_text";
 	
 	li_wayPoint.appendChild(div);
 	li_wayPoint.appendChild(input_wayPoint);
 	 	
 	ul.insertBefore(li_wayPoint,ul.item(3));
 	 	
 	var li_tools = document.createElement("li");
 	li_tools.className = "tools";
 	var button_addAbove = document.createElement("button");
  	button_addAbove.id = "buttons_tools";
  	button_addAbove.innerHTML = "ADD WAY POINT ABOVE";
  	 	
  	var button_addBelow = document.createElement("button");
  	button_addBelow.id = "buttons_tools";
 	button_addBelow.innerHTML = "ADD WAY POINT BELOW";
 	
	li_tools.appendChild(button_addAbove);
 	li_tools.appendChild(button_addBelow);
 	 	
  	ul.insertBefore(li_tools,ul.item(3));
	
   
 }
 
 // Removes the overlays from the map, but keeps them in the array
  function clearOverlays() {
    if (markersArray) {
      for (i in markersArray) {
        markersArray[i].setMap(null);
      }
    }
  }
 
  // Shows any overlays currently in the array
  function showOverlays() {
    if (markersArray) {
      for (i in markersArray) {
        markersArray[i].setMap(map);
      }
    }
  }
 
  // Deletes all markers in the array by removing references to them
  function deleteOverlays() {
    if (markersArray) {
      for (i in markersArray) {
        markersArray[i].setMap(null);
      }
      markersArray.length = 0;
    }
  }

</script>
</head>

<body onload="initialize()" style="background: rgb(205,205,205)">

<div id="map_canvas" style="width:100%; height:100%"></div>

<!--<div data-role="page" data-theme="b" id="jqm-home"> 
<div data-role="content">

<%= yield %>

</div> 
</div> --> 
</body>
</html>